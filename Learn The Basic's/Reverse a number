
//Coding Ninjas
long reverseBits(long n) {
    // Write your code here.
     unsigned int rev = 0;
    for (int i = 0; i < 32; ++i) {
        rev <<= 1; // Left shift 'rev' by 1
        if (n & 1) // Check if the least significant bit of 'n' is set
            rev |= 1; // Set the least significant bit of 'rev' if 'n' has a set bit
        n >>= 1; // Right shift 'n' by 1 to check the next bit
    }
    return rev;
}


//Leetcode 

class Solution {
public:
    int reverse(int x) {
      int rev =0;
       while(x!=0){
      int lastdigit = x%10;
       rev = rev*10 + lastdigit;
       x =x/10;

    }
     if(rev>INT_MAX || rev<INT_MIN) return 0;
    return rev;
    }
    
};
