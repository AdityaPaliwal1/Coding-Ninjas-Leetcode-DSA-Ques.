class Solution {
    private:
    int fun(vector<int>& weights , int capacity){
        int days =1 , load = 0;
        int n = weights.size();
        for(int i =0 ; i<n ; i++){
            if(load + weights[i] > capacity){
                days = days + 1;
                load = weights[i];
            }
            else{
                load = load + weights[i];
            }
        }
        return days;
    }
public:
    int shipWithinDays(vector<int>& weights, int days) {
        int sum =0;
        int maxi = INT_MIN;
        for(int i =0 ; i<weights.size(); i++){
            sum+=weights[i];
            maxi = max(weights[i], maxi);
        }
        int low = maxi , high = sum;
        while(low <= high){
            int mid = (low + high )/2 ;
            if(fun(weights,mid) <= days){
                high = mid -1;
            }
            else {
                low = mid + 1;
            }
        }
        return low;
       
    }
};
